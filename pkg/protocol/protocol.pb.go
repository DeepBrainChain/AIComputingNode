// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        v5.29.2
// source: protocol.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_PEER_IDENTITY    MessageType = 0
	MessageType_HOST_INFO        MessageType = 1
	MessageType_AI_PROJECT       MessageType = 2
	MessageType_CHAT_COMPLETION  MessageType = 16
	MessageType_IMAGE_GENERATION MessageType = 17
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "PEER_IDENTITY",
		1:  "HOST_INFO",
		2:  "AI_PROJECT",
		16: "CHAT_COMPLETION",
		17: "IMAGE_GENERATION",
	}
	MessageType_value = map[string]int32{
		"PEER_IDENTITY":    0,
		"HOST_INFO":        1,
		"AI_PROJECT":       2,
		"CHAT_COMPLETION":  16,
		"IMAGE_GENERATION": 17,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

type ChatContentPart_Type int32

const (
	ChatContentPart_TEXT  ChatContentPart_Type = 0
	ChatContentPart_IMAGE ChatContentPart_Type = 1
	ChatContentPart_AUDIO ChatContentPart_Type = 2
)

// Enum value maps for ChatContentPart_Type.
var (
	ChatContentPart_Type_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "AUDIO",
	}
	ChatContentPart_Type_value = map[string]int32{
		"TEXT":  0,
		"IMAGE": 1,
		"AUDIO": 2,
	}
)

func (x ChatContentPart_Type) Enum() *ChatContentPart_Type {
	p := new(ChatContentPart_Type)
	*p = x
	return p
}

func (x ChatContentPart_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatContentPart_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_proto_enumTypes[1].Descriptor()
}

func (ChatContentPart_Type) Type() protoreflect.EnumType {
	return &file_protocol_proto_enumTypes[1]
}

func (x ChatContentPart_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatContentPart_Type.Descriptor instead.
func (ChatContentPart_Type) EnumDescriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10, 0}
}

type MessageHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientVersion string                 `protobuf:"bytes,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	NodeId        string                 `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Receiver      string                 `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	NodePubKey    []byte                 `protobuf:"bytes,6,opt,name=node_pub_key,json=nodePubKey,proto3" json:"node_pub_key,omitempty"`
	Sign          []byte                 `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageHeader) Reset() {
	*x = MessageHeader{}
	mi := &file_protocol_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageHeader) ProtoMessage() {}

func (x *MessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageHeader.ProtoReflect.Descriptor instead.
func (*MessageHeader) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *MessageHeader) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *MessageHeader) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MessageHeader) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MessageHeader) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *MessageHeader) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *MessageHeader) GetNodePubKey() []byte {
	if x != nil {
		return x.NodePubKey
	}
	return nil
}

func (x *MessageHeader) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *MessageHeader         `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Type          MessageType            `protobuf:"varint,2,opt,name=type,proto3,enum=protocol.MessageType" json:"type,omitempty"`
	Body          []byte                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	ResultCode    int32                  `protobuf:"varint,4,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	ResultMessage string                 `protobuf:"bytes,5,opt,name=result_message,json=resultMessage,proto3" json:"result_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_protocol_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Message) GetHeader() *MessageHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_PEER_IDENTITY
}

func (x *Message) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Message) GetResultCode() int32 {
	if x != nil {
		return x.ResultCode
	}
	return 0
}

func (x *Message) GetResultMessage() string {
	if x != nil {
		return x.ResultMessage
	}
	return ""
}

type PeerIdentityBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*PeerIdentityBody_Req
	//	*PeerIdentityBody_Res
	Data          isPeerIdentityBody_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerIdentityBody) Reset() {
	*x = PeerIdentityBody{}
	mi := &file_protocol_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerIdentityBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerIdentityBody) ProtoMessage() {}

func (x *PeerIdentityBody) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerIdentityBody.ProtoReflect.Descriptor instead.
func (*PeerIdentityBody) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *PeerIdentityBody) GetData() isPeerIdentityBody_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PeerIdentityBody) GetReq() *PeerIdentityRequest {
	if x != nil {
		if x, ok := x.Data.(*PeerIdentityBody_Req); ok {
			return x.Req
		}
	}
	return nil
}

func (x *PeerIdentityBody) GetRes() *PeerIdentityResponse {
	if x != nil {
		if x, ok := x.Data.(*PeerIdentityBody_Res); ok {
			return x.Res
		}
	}
	return nil
}

type isPeerIdentityBody_Data interface {
	isPeerIdentityBody_Data()
}

type PeerIdentityBody_Req struct {
	Req *PeerIdentityRequest `protobuf:"bytes,1,opt,name=req,proto3,oneof"`
}

type PeerIdentityBody_Res struct {
	Res *PeerIdentityResponse `protobuf:"bytes,2,opt,name=res,proto3,oneof"`
}

func (*PeerIdentityBody_Req) isPeerIdentityBody_Data() {}

func (*PeerIdentityBody_Res) isPeerIdentityBody_Data() {}

type PeerIdentityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PeerIdentityRequest) Reset() {
	*x = PeerIdentityRequest{}
	mi := &file_protocol_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerIdentityRequest) ProtoMessage() {}

func (x *PeerIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerIdentityRequest.ProtoReflect.Descriptor instead.
func (*PeerIdentityRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{3}
}

type PeerIdentityResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ProtocolVersion string                 `protobuf:"bytes,5,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"` // e.g. ipfs/1.0.0
	AgentVersion    string                 `protobuf:"bytes,6,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`          // e.g. go-ipfs/0.1.0
	PublicKey       []byte                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	ListenAddrs     []string               `protobuf:"bytes,2,rep,name=listen_addrs,json=listenAddrs,proto3" json:"listen_addrs,omitempty"`
	Protocols       []string               `protobuf:"bytes,3,rep,name=protocols,proto3" json:"protocols,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PeerIdentityResponse) Reset() {
	*x = PeerIdentityResponse{}
	mi := &file_protocol_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerIdentityResponse) ProtoMessage() {}

func (x *PeerIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerIdentityResponse.ProtoReflect.Descriptor instead.
func (*PeerIdentityResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *PeerIdentityResponse) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *PeerIdentityResponse) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *PeerIdentityResponse) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *PeerIdentityResponse) GetListenAddrs() []string {
	if x != nil {
		return x.ListenAddrs
	}
	return nil
}

func (x *PeerIdentityResponse) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

type WalletVerification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wallet        string                 `protobuf:"bytes,1,opt,name=wallet,proto3" json:"wallet,omitempty"`
	Signature     string                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	Hash          string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletVerification) Reset() {
	*x = WalletVerification{}
	mi := &file_protocol_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletVerification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletVerification) ProtoMessage() {}

func (x *WalletVerification) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletVerification.ProtoReflect.Descriptor instead.
func (*WalletVerification) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *WalletVerification) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *WalletVerification) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *WalletVerification) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ImageGenerationBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*ImageGenerationBody_Req
	//	*ImageGenerationBody_Res
	Data          isImageGenerationBody_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageGenerationBody) Reset() {
	*x = ImageGenerationBody{}
	mi := &file_protocol_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageGenerationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGenerationBody) ProtoMessage() {}

func (x *ImageGenerationBody) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGenerationBody.ProtoReflect.Descriptor instead.
func (*ImageGenerationBody) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *ImageGenerationBody) GetData() isImageGenerationBody_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ImageGenerationBody) GetReq() *ImageGenerationRequest {
	if x != nil {
		if x, ok := x.Data.(*ImageGenerationBody_Req); ok {
			return x.Req
		}
	}
	return nil
}

func (x *ImageGenerationBody) GetRes() *ImageGenerationResponse {
	if x != nil {
		if x, ok := x.Data.(*ImageGenerationBody_Res); ok {
			return x.Res
		}
	}
	return nil
}

type isImageGenerationBody_Data interface {
	isImageGenerationBody_Data()
}

type ImageGenerationBody_Req struct {
	Req *ImageGenerationRequest `protobuf:"bytes,1,opt,name=req,proto3,oneof"`
}

type ImageGenerationBody_Res struct {
	Res *ImageGenerationResponse `protobuf:"bytes,2,opt,name=res,proto3,oneof"`
}

func (*ImageGenerationBody_Req) isImageGenerationBody_Data() {}

func (*ImageGenerationBody_Res) isImageGenerationBody_Data() {}

type ImageGenerationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Project        string                 `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Model          string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Prompt         string                 `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Number         int32                  `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	Size           string                 `protobuf:"bytes,5,opt,name=size,proto3" json:"size,omitempty"`
	Width          int32                  `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Height         int32                  `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	ResponseFormat string                 `protobuf:"bytes,8,opt,name=response_format,json=responseFormat,proto3" json:"response_format,omitempty"`
	Cid            string                 `protobuf:"bytes,9,opt,name=cid,proto3" json:"cid,omitempty"`
	Step           int32                  `protobuf:"varint,10,opt,name=step,proto3" json:"step,omitempty"`
	Wallet         *WalletVerification    `protobuf:"bytes,16,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ImageGenerationRequest) Reset() {
	*x = ImageGenerationRequest{}
	mi := &file_protocol_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageGenerationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGenerationRequest) ProtoMessage() {}

func (x *ImageGenerationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGenerationRequest.ProtoReflect.Descriptor instead.
func (*ImageGenerationRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *ImageGenerationRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ImageGenerationRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ImageGenerationRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ImageGenerationRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *ImageGenerationRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ImageGenerationRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *ImageGenerationRequest) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *ImageGenerationRequest) GetResponseFormat() string {
	if x != nil {
		return x.ResponseFormat
	}
	return ""
}

func (x *ImageGenerationRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ImageGenerationRequest) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *ImageGenerationRequest) GetWallet() *WalletVerification {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type ImageGenerationResponse struct {
	state         protoimpl.MessageState                         `protogen:"open.v1"`
	Created       int64                                          `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Choices       []*ImageGenerationResponse_ImageResponseChoice `protobuf:"bytes,2,rep,name=choices,proto3" json:"choices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageGenerationResponse) Reset() {
	*x = ImageGenerationResponse{}
	mi := &file_protocol_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageGenerationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGenerationResponse) ProtoMessage() {}

func (x *ImageGenerationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGenerationResponse.ProtoReflect.Descriptor instead.
func (*ImageGenerationResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *ImageGenerationResponse) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ImageGenerationResponse) GetChoices() []*ImageGenerationResponse_ImageResponseChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type ChatCompletionBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*ChatCompletionBody_Req
	//	*ChatCompletionBody_Res
	Data          isChatCompletionBody_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCompletionBody) Reset() {
	*x = ChatCompletionBody{}
	mi := &file_protocol_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionBody) ProtoMessage() {}

func (x *ChatCompletionBody) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionBody.ProtoReflect.Descriptor instead.
func (*ChatCompletionBody) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *ChatCompletionBody) GetData() isChatCompletionBody_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ChatCompletionBody) GetReq() *ChatCompletionRequest {
	if x != nil {
		if x, ok := x.Data.(*ChatCompletionBody_Req); ok {
			return x.Req
		}
	}
	return nil
}

func (x *ChatCompletionBody) GetRes() *ChatCompletionResponse {
	if x != nil {
		if x, ok := x.Data.(*ChatCompletionBody_Res); ok {
			return x.Res
		}
	}
	return nil
}

type isChatCompletionBody_Data interface {
	isChatCompletionBody_Data()
}

type ChatCompletionBody_Req struct {
	Req *ChatCompletionRequest `protobuf:"bytes,1,opt,name=req,proto3,oneof"`
}

type ChatCompletionBody_Res struct {
	Res *ChatCompletionResponse `protobuf:"bytes,2,opt,name=res,proto3,oneof"`
}

func (*ChatCompletionBody_Req) isChatCompletionBody_Data() {}

func (*ChatCompletionBody_Res) isChatCompletionBody_Data() {}

type ChatContentPart struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ChatContentPart_Type   `protobuf:"varint,1,opt,name=type,proto3,enum=protocol.ChatContentPart_Type" json:"type,omitempty"`
	Text          *ChatContentPart_Text  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Image         *ChatContentPart_Image `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Audio         *ChatContentPart_Audio `protobuf:"bytes,4,opt,name=audio,proto3" json:"audio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatContentPart) Reset() {
	*x = ChatContentPart{}
	mi := &file_protocol_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatContentPart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatContentPart) ProtoMessage() {}

func (x *ChatContentPart) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatContentPart.ProtoReflect.Descriptor instead.
func (*ChatContentPart) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *ChatContentPart) GetType() ChatContentPart_Type {
	if x != nil {
		return x.Type
	}
	return ChatContentPart_TEXT
}

func (x *ChatContentPart) GetText() *ChatContentPart_Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *ChatContentPart) GetImage() *ChatContentPart_Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ChatContentPart) GetAudio() *ChatContentPart_Audio {
	if x != nil {
		return x.Audio
	}
	return nil
}

type ChatContentParts struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Parts         []*ChatContentPart     `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatContentParts) Reset() {
	*x = ChatContentParts{}
	mi := &file_protocol_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatContentParts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatContentParts) ProtoMessage() {}

func (x *ChatContentParts) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatContentParts.ProtoReflect.Descriptor instead.
func (*ChatContentParts) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *ChatContentParts) GetParts() []*ChatContentPart {
	if x != nil {
		return x.Parts
	}
	return nil
}

type ChatCompletionMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCompletionMessage) Reset() {
	*x = ChatCompletionMessage{}
	mi := &file_protocol_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionMessage) ProtoMessage() {}

func (x *ChatCompletionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionMessage.ProtoReflect.Descriptor instead.
func (*ChatCompletionMessage) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *ChatCompletionMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatCompletionMessage) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type ChatCompletionRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Project       string                   `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Model         string                   `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Messages      []*ChatCompletionMessage `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Stream        bool                     `protobuf:"varint,4,opt,name=stream,proto3" json:"stream,omitempty"`
	Cid           string                   `protobuf:"bytes,5,opt,name=cid,proto3" json:"cid,omitempty"`
	Temperature   float32                  `protobuf:"fixed32,6,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopP          float32                  `protobuf:"fixed32,7,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	Wallet        *WalletVerification      `protobuf:"bytes,16,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCompletionRequest) Reset() {
	*x = ChatCompletionRequest{}
	mi := &file_protocol_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionRequest) ProtoMessage() {}

func (x *ChatCompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionRequest.ProtoReflect.Descriptor instead.
func (*ChatCompletionRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *ChatCompletionRequest) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ChatCompletionRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatCompletionRequest) GetMessages() []*ChatCompletionMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatCompletionRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *ChatCompletionRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *ChatCompletionRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ChatCompletionRequest) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ChatCompletionRequest) GetWallet() *WalletVerification {
	if x != nil {
		return x.Wallet
	}
	return nil
}

type ChatCompletionResponseMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          string                 `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCompletionResponseMessage) Reset() {
	*x = ChatCompletionResponseMessage{}
	mi := &file_protocol_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionResponseMessage) ProtoMessage() {}

func (x *ChatCompletionResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionResponseMessage.ProtoReflect.Descriptor instead.
func (*ChatCompletionResponseMessage) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *ChatCompletionResponseMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatCompletionResponseMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChatCompletionResponse struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Created       int64                                        `protobuf:"varint,1,opt,name=created,proto3" json:"created,omitempty"`
	Choices       []*ChatCompletionResponse_ChatResponseChoice `protobuf:"bytes,2,rep,name=choices,proto3" json:"choices,omitempty"`
	Usage         *ChatCompletionResponse_ChatResponseUsage    `protobuf:"bytes,3,opt,name=usage,proto3" json:"usage,omitempty"`
	Id            string                                       `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	Object        string                                       `protobuf:"bytes,5,opt,name=object,proto3" json:"object,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCompletionResponse) Reset() {
	*x = ChatCompletionResponse{}
	mi := &file_protocol_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionResponse) ProtoMessage() {}

func (x *ChatCompletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionResponse.ProtoReflect.Descriptor instead.
func (*ChatCompletionResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *ChatCompletionResponse) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatCompletionResponse) GetChoices() []*ChatCompletionResponse_ChatResponseChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ChatCompletionResponse) GetUsage() *ChatCompletionResponse_ChatResponseUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *ChatCompletionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatCompletionResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

type HostInfoBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*HostInfoBody_Req
	//	*HostInfoBody_Res
	Data          isHostInfoBody_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfoBody) Reset() {
	*x = HostInfoBody{}
	mi := &file_protocol_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoBody) ProtoMessage() {}

func (x *HostInfoBody) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoBody.ProtoReflect.Descriptor instead.
func (*HostInfoBody) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *HostInfoBody) GetData() isHostInfoBody_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HostInfoBody) GetReq() *HostInfoRequest {
	if x != nil {
		if x, ok := x.Data.(*HostInfoBody_Req); ok {
			return x.Req
		}
	}
	return nil
}

func (x *HostInfoBody) GetRes() *HostInfoResponse {
	if x != nil {
		if x, ok := x.Data.(*HostInfoBody_Res); ok {
			return x.Res
		}
	}
	return nil
}

type isHostInfoBody_Data interface {
	isHostInfoBody_Data()
}

type HostInfoBody_Req struct {
	Req *HostInfoRequest `protobuf:"bytes,1,opt,name=req,proto3,oneof"`
}

type HostInfoBody_Res struct {
	Res *HostInfoResponse `protobuf:"bytes,2,opt,name=res,proto3,oneof"`
}

func (*HostInfoBody_Req) isHostInfoBody_Data() {}

func (*HostInfoBody_Res) isHostInfoBody_Data() {}

type HostInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfoRequest) Reset() {
	*x = HostInfoRequest{}
	mi := &file_protocol_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoRequest) ProtoMessage() {}

func (x *HostInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoRequest.ProtoReflect.Descriptor instead.
func (*HostInfoRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{17}
}

type HostInfoResponse struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Os            *HostInfoResponse_OSInfo     `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Cpu           []*HostInfoResponse_CpuInfo  `protobuf:"bytes,2,rep,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        *HostInfoResponse_MemoryInfo `protobuf:"bytes,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk          []*HostInfoResponse_DiskInfo `protobuf:"bytes,4,rep,name=disk,proto3" json:"disk,omitempty"`
	Gpu           []*HostInfoResponse_GpuInfo  `protobuf:"bytes,5,rep,name=gpu,proto3" json:"gpu,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfoResponse) Reset() {
	*x = HostInfoResponse{}
	mi := &file_protocol_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoResponse) ProtoMessage() {}

func (x *HostInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoResponse.ProtoReflect.Descriptor instead.
func (*HostInfoResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18}
}

func (x *HostInfoResponse) GetOs() *HostInfoResponse_OSInfo {
	if x != nil {
		return x.Os
	}
	return nil
}

func (x *HostInfoResponse) GetCpu() []*HostInfoResponse_CpuInfo {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *HostInfoResponse) GetMemory() *HostInfoResponse_MemoryInfo {
	if x != nil {
		return x.Memory
	}
	return nil
}

func (x *HostInfoResponse) GetDisk() []*HostInfoResponse_DiskInfo {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *HostInfoResponse) GetGpu() []*HostInfoResponse_GpuInfo {
	if x != nil {
		return x.Gpu
	}
	return nil
}

type AIProjectBody struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*AIProjectBody_Req
	//	*AIProjectBody_Res
	Data          isAIProjectBody_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIProjectBody) Reset() {
	*x = AIProjectBody{}
	mi := &file_protocol_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIProjectBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIProjectBody) ProtoMessage() {}

func (x *AIProjectBody) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIProjectBody.ProtoReflect.Descriptor instead.
func (*AIProjectBody) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{19}
}

func (x *AIProjectBody) GetData() isAIProjectBody_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AIProjectBody) GetReq() *AIProjectRequest {
	if x != nil {
		if x, ok := x.Data.(*AIProjectBody_Req); ok {
			return x.Req
		}
	}
	return nil
}

func (x *AIProjectBody) GetRes() *AIProjectResponse {
	if x != nil {
		if x, ok := x.Data.(*AIProjectBody_Res); ok {
			return x.Res
		}
	}
	return nil
}

type isAIProjectBody_Data interface {
	isAIProjectBody_Data()
}

type AIProjectBody_Req struct {
	Req *AIProjectRequest `protobuf:"bytes,1,opt,name=req,proto3,oneof"`
}

type AIProjectBody_Res struct {
	Res *AIProjectResponse `protobuf:"bytes,2,opt,name=res,proto3,oneof"`
}

func (*AIProjectBody_Req) isAIProjectBody_Data() {}

func (*AIProjectBody_Res) isAIProjectBody_Data() {}

type AIModelOfProject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Api           string                 `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty"`
	Type          uint32                 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Idle          uint32                 `protobuf:"varint,4,opt,name=idle,proto3" json:"idle,omitempty"`
	Cid           string                 `protobuf:"bytes,5,opt,name=cid,proto3" json:"cid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIModelOfProject) Reset() {
	*x = AIModelOfProject{}
	mi := &file_protocol_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIModelOfProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIModelOfProject) ProtoMessage() {}

func (x *AIModelOfProject) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIModelOfProject.ProtoReflect.Descriptor instead.
func (*AIModelOfProject) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{20}
}

func (x *AIModelOfProject) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *AIModelOfProject) GetApi() string {
	if x != nil {
		return x.Api
	}
	return ""
}

func (x *AIModelOfProject) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AIModelOfProject) GetIdle() uint32 {
	if x != nil {
		return x.Idle
	}
	return 0
}

func (x *AIModelOfProject) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type AIProjectOfNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       string                 `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Models        []*AIModelOfProject    `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIProjectOfNode) Reset() {
	*x = AIProjectOfNode{}
	mi := &file_protocol_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIProjectOfNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIProjectOfNode) ProtoMessage() {}

func (x *AIProjectOfNode) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIProjectOfNode.ProtoReflect.Descriptor instead.
func (*AIProjectOfNode) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{21}
}

func (x *AIProjectOfNode) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *AIProjectOfNode) GetModels() []*AIModelOfProject {
	if x != nil {
		return x.Models
	}
	return nil
}

type AIProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIProjectRequest) Reset() {
	*x = AIProjectRequest{}
	mi := &file_protocol_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIProjectRequest) ProtoMessage() {}

func (x *AIProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIProjectRequest.ProtoReflect.Descriptor instead.
func (*AIProjectRequest) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{22}
}

type AIProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*AIProjectOfNode     `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	NodeType      uint32                 `protobuf:"varint,2,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AIProjectResponse) Reset() {
	*x = AIProjectResponse{}
	mi := &file_protocol_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AIProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AIProjectResponse) ProtoMessage() {}

func (x *AIProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AIProjectResponse.ProtoReflect.Descriptor instead.
func (*AIProjectResponse) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{23}
}

func (x *AIProjectResponse) GetProjects() []*AIProjectOfNode {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *AIProjectResponse) GetNodeType() uint32 {
	if x != nil {
		return x.NodeType
	}
	return 0
}

type ImageGenerationResponse_ImageResponseChoice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	B64Json       string                 `protobuf:"bytes,2,opt,name=b64_json,json=b64Json,proto3" json:"b64_json,omitempty"`
	RevisedPrompt string                 `protobuf:"bytes,3,opt,name=revised_prompt,json=revisedPrompt,proto3" json:"revised_prompt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImageGenerationResponse_ImageResponseChoice) Reset() {
	*x = ImageGenerationResponse_ImageResponseChoice{}
	mi := &file_protocol_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageGenerationResponse_ImageResponseChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageGenerationResponse_ImageResponseChoice) ProtoMessage() {}

func (x *ImageGenerationResponse_ImageResponseChoice) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageGenerationResponse_ImageResponseChoice.ProtoReflect.Descriptor instead.
func (*ImageGenerationResponse_ImageResponseChoice) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ImageGenerationResponse_ImageResponseChoice) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ImageGenerationResponse_ImageResponseChoice) GetB64Json() string {
	if x != nil {
		return x.B64Json
	}
	return ""
}

func (x *ImageGenerationResponse_ImageResponseChoice) GetRevisedPrompt() string {
	if x != nil {
		return x.RevisedPrompt
	}
	return ""
}

type ChatContentPart_Text struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatContentPart_Text) Reset() {
	*x = ChatContentPart_Text{}
	mi := &file_protocol_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatContentPart_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatContentPart_Text) ProtoMessage() {}

func (x *ChatContentPart_Text) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatContentPart_Text.ProtoReflect.Descriptor instead.
func (*ChatContentPart_Text) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ChatContentPart_Text) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatContentPart_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ChatContentPart_Image struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Detail        string                 `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatContentPart_Image) Reset() {
	*x = ChatContentPart_Image{}
	mi := &file_protocol_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatContentPart_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatContentPart_Image) ProtoMessage() {}

func (x *ChatContentPart_Image) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatContentPart_Image.ProtoReflect.Descriptor instead.
func (*ChatContentPart_Image) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10, 1}
}

func (x *ChatContentPart_Image) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatContentPart_Image) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ChatContentPart_Image) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

type ChatContentPart_Audio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Format        string                 `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatContentPart_Audio) Reset() {
	*x = ChatContentPart_Audio{}
	mi := &file_protocol_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatContentPart_Audio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatContentPart_Audio) ProtoMessage() {}

func (x *ChatContentPart_Audio) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatContentPart_Audio.ProtoReflect.Descriptor instead.
func (*ChatContentPart_Audio) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{10, 2}
}

func (x *ChatContentPart_Audio) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatContentPart_Audio) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *ChatContentPart_Audio) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type ChatCompletionResponse_ChatResponseChoice struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Index         int32                          `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Message       *ChatCompletionResponseMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FinishReason  string                         `protobuf:"bytes,3,opt,name=finish_reason,json=finishReason,proto3" json:"finish_reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatCompletionResponse_ChatResponseChoice) Reset() {
	*x = ChatCompletionResponse_ChatResponseChoice{}
	mi := &file_protocol_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionResponse_ChatResponseChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionResponse_ChatResponseChoice) ProtoMessage() {}

func (x *ChatCompletionResponse_ChatResponseChoice) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionResponse_ChatResponseChoice.ProtoReflect.Descriptor instead.
func (*ChatCompletionResponse_ChatResponseChoice) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15, 0}
}

func (x *ChatCompletionResponse_ChatResponseChoice) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ChatCompletionResponse_ChatResponseChoice) GetMessage() *ChatCompletionResponseMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatCompletionResponse_ChatResponseChoice) GetFinishReason() string {
	if x != nil {
		return x.FinishReason
	}
	return ""
}

type ChatCompletionResponse_ChatResponseUsage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CompletionTokens int32                  `protobuf:"varint,1,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
	PromptTokens     int32                  `protobuf:"varint,2,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	TotalTokens      int32                  `protobuf:"varint,3,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ChatCompletionResponse_ChatResponseUsage) Reset() {
	*x = ChatCompletionResponse_ChatResponseUsage{}
	mi := &file_protocol_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatCompletionResponse_ChatResponseUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionResponse_ChatResponseUsage) ProtoMessage() {}

func (x *ChatCompletionResponse_ChatResponseUsage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionResponse_ChatResponseUsage.ProtoReflect.Descriptor instead.
func (*ChatCompletionResponse_ChatResponseUsage) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{15, 1}
}

func (x *ChatCompletionResponse_ChatResponseUsage) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *ChatCompletionResponse_ChatResponseUsage) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *ChatCompletionResponse_ChatResponseUsage) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

type HostInfoResponse_OSInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Os              string                 `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`
	Platform        string                 `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	PlatformFamily  string                 `protobuf:"bytes,3,opt,name=platform_family,json=platformFamily,proto3" json:"platform_family,omitempty"`
	PlatformVersion string                 `protobuf:"bytes,4,opt,name=platform_version,json=platformVersion,proto3" json:"platform_version,omitempty"`
	KernelVersion   string                 `protobuf:"bytes,5,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	KernelArch      string                 `protobuf:"bytes,6,opt,name=kernel_arch,json=kernelArch,proto3" json:"kernel_arch,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *HostInfoResponse_OSInfo) Reset() {
	*x = HostInfoResponse_OSInfo{}
	mi := &file_protocol_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoResponse_OSInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoResponse_OSInfo) ProtoMessage() {}

func (x *HostInfoResponse_OSInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoResponse_OSInfo.ProtoReflect.Descriptor instead.
func (*HostInfoResponse_OSInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18, 0}
}

func (x *HostInfoResponse_OSInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HostInfoResponse_OSInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostInfoResponse_OSInfo) GetPlatformFamily() string {
	if x != nil {
		return x.PlatformFamily
	}
	return ""
}

func (x *HostInfoResponse_OSInfo) GetPlatformVersion() string {
	if x != nil {
		return x.PlatformVersion
	}
	return ""
}

func (x *HostInfoResponse_OSInfo) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *HostInfoResponse_OSInfo) GetKernelArch() string {
	if x != nil {
		return x.KernelArch
	}
	return ""
}

type HostInfoResponse_CpuInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	TotalCores    uint32                 `protobuf:"varint,2,opt,name=total_cores,json=totalCores,proto3" json:"total_cores,omitempty"`
	TotalThreads  uint32                 `protobuf:"varint,3,opt,name=total_threads,json=totalThreads,proto3" json:"total_threads,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfoResponse_CpuInfo) Reset() {
	*x = HostInfoResponse_CpuInfo{}
	mi := &file_protocol_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoResponse_CpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoResponse_CpuInfo) ProtoMessage() {}

func (x *HostInfoResponse_CpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoResponse_CpuInfo.ProtoReflect.Descriptor instead.
func (*HostInfoResponse_CpuInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18, 1}
}

func (x *HostInfoResponse_CpuInfo) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *HostInfoResponse_CpuInfo) GetTotalCores() uint32 {
	if x != nil {
		return x.TotalCores
	}
	return 0
}

func (x *HostInfoResponse_CpuInfo) GetTotalThreads() uint32 {
	if x != nil {
		return x.TotalThreads
	}
	return 0
}

type HostInfoResponse_MemoryInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalPhysicalBytes int64                  `protobuf:"varint,1,opt,name=total_physical_bytes,json=totalPhysicalBytes,proto3" json:"total_physical_bytes,omitempty"`
	TotalUsableBytes   int64                  `protobuf:"varint,2,opt,name=total_usable_bytes,json=totalUsableBytes,proto3" json:"total_usable_bytes,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HostInfoResponse_MemoryInfo) Reset() {
	*x = HostInfoResponse_MemoryInfo{}
	mi := &file_protocol_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoResponse_MemoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoResponse_MemoryInfo) ProtoMessage() {}

func (x *HostInfoResponse_MemoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoResponse_MemoryInfo.ProtoReflect.Descriptor instead.
func (*HostInfoResponse_MemoryInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18, 2}
}

func (x *HostInfoResponse_MemoryInfo) GetTotalPhysicalBytes() int64 {
	if x != nil {
		return x.TotalPhysicalBytes
	}
	return 0
}

func (x *HostInfoResponse_MemoryInfo) GetTotalUsableBytes() int64 {
	if x != nil {
		return x.TotalUsableBytes
	}
	return 0
}

type HostInfoResponse_DiskInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DriveType     string                 `protobuf:"bytes,1,opt,name=drive_type,json=driveType,proto3" json:"drive_type,omitempty"`
	SizeBytes     uint64                 `protobuf:"varint,2,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	Model         string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	SerialNumber  string                 `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfoResponse_DiskInfo) Reset() {
	*x = HostInfoResponse_DiskInfo{}
	mi := &file_protocol_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoResponse_DiskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoResponse_DiskInfo) ProtoMessage() {}

func (x *HostInfoResponse_DiskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoResponse_DiskInfo.ProtoReflect.Descriptor instead.
func (*HostInfoResponse_DiskInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18, 3}
}

func (x *HostInfoResponse_DiskInfo) GetDriveType() string {
	if x != nil {
		return x.DriveType
	}
	return ""
}

func (x *HostInfoResponse_DiskInfo) GetSizeBytes() uint64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

func (x *HostInfoResponse_DiskInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *HostInfoResponse_DiskInfo) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

type HostInfoResponse_GpuInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vendor        string                 `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Product       string                 `protobuf:"bytes,2,opt,name=product,proto3" json:"product,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfoResponse_GpuInfo) Reset() {
	*x = HostInfoResponse_GpuInfo{}
	mi := &file_protocol_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfoResponse_GpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfoResponse_GpuInfo) ProtoMessage() {}

func (x *HostInfoResponse_GpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfoResponse_GpuInfo.ProtoReflect.Descriptor instead.
func (*HostInfoResponse_GpuInfo) Descriptor() ([]byte, []int) {
	return file_protocol_proto_rawDescGZIP(), []int{18, 4}
}

func (x *HostInfoResponse_GpuInfo) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *HostInfoResponse_GpuInfo) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

var File_protocol_proto protoreflect.FileDescriptor

var file_protocol_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xcf, 0x01, 0x0a, 0x0d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70,
	0x75, 0x62, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x6f,
	0x64, 0x65, 0x50, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0xc1, 0x01, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x10, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x32, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x14,
	0x50, 0x65, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x22, 0x5e, 0x0a, 0x12, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x22, 0x8a, 0x01, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x34, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x72,
	0x65, 0x71, 0x12, 0x35, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc5, 0x02, 0x0a, 0x16, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x34, 0x0a,
	0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x4a, 0x04, 0x08, 0x0b, 0x10, 0x10, 0x22, 0xef, 0x01, 0x0a, 0x17, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x4f, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x1a, 0x69, 0x0a, 0x13, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x36, 0x34,
	0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x36, 0x34,
	0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x76, 0x69, 0x73, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x76, 0x69, 0x73, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x12,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x73, 0x42, 0x06, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcf, 0x03, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x1a,
	0x2e, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a,
	0x45, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x1a, 0x47, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22,
	0x26, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x02, 0x22, 0x43, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x74, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x22, 0x45, 0x0a, 0x15,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0xa1, 0x02, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x3b, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12, 0x34, 0x0a, 0x06, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x10, 0x22, 0x4d, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x93, 0x04, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x07, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x05, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x92, 0x01, 0x0a,
	0x12, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x41, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x1a, 0x88, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x75, 0x0a, 0x0c,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2d, 0x0a, 0x03,
	0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x03, 0x72,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x11, 0x0a, 0x0f, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x9d, 0x07, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x02, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x34,
	0x0a, 0x03, 0x63, 0x70, 0x75, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x03, 0x63, 0x70, 0x75, 0x12, 0x3d, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x34, 0x0a, 0x03,
	0x67, 0x70, 0x75, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x67,
	0x70, 0x75, 0x1a, 0xd0, 0x01, 0x0a, 0x06, 0x4f, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x5f, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6b, 0x65, 0x72, 0x6e, 0x65,
	0x6c, 0x41, 0x72, 0x63, 0x68, 0x1a, 0x6e, 0x0a, 0x07, 0x43, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x72, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x1a, 0x6c, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x1a, 0x83, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x3b, 0x0a, 0x07, 0x47, 0x70, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x78, 0x0a, 0x0d, 0x41, 0x49, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x2e, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x41, 0x49, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x2f, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x41, 0x49, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x74, 0x0a, 0x10, 0x41, 0x49, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x66, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x70,
	0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x70, 0x69, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x69, 0x64, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x5f, 0x0a, 0x0f, 0x41, 0x49, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4f, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41,
	0x49, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4f, 0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x49, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x67, 0x0a, 0x11, 0x41,
	0x49, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x49,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x66, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x2a, 0x70, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x4f, 0x53, 0x54, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x49, 0x5f, 0x50, 0x52, 0x4f, 0x4a,
	0x45, 0x43, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x43, 0x4f,
	0x4d, 0x50, 0x4c, 0x45, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4d,
	0x41, 0x47, 0x45, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x11,
	0x22, 0x04, 0x08, 0x03, 0x10, 0x0f, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_proto_rawDescOnce sync.Once
	file_protocol_proto_rawDescData = file_protocol_proto_rawDesc
)

func file_protocol_proto_rawDescGZIP() []byte {
	file_protocol_proto_rawDescOnce.Do(func() {
		file_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_proto_rawDescData)
	})
	return file_protocol_proto_rawDescData
}

var file_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_protocol_proto_goTypes = []any{
	(MessageType)(0),                                    // 0: protocol.MessageType
	(ChatContentPart_Type)(0),                           // 1: protocol.ChatContentPart.Type
	(*MessageHeader)(nil),                               // 2: protocol.MessageHeader
	(*Message)(nil),                                     // 3: protocol.Message
	(*PeerIdentityBody)(nil),                            // 4: protocol.PeerIdentityBody
	(*PeerIdentityRequest)(nil),                         // 5: protocol.PeerIdentityRequest
	(*PeerIdentityResponse)(nil),                        // 6: protocol.PeerIdentityResponse
	(*WalletVerification)(nil),                          // 7: protocol.WalletVerification
	(*ImageGenerationBody)(nil),                         // 8: protocol.ImageGenerationBody
	(*ImageGenerationRequest)(nil),                      // 9: protocol.ImageGenerationRequest
	(*ImageGenerationResponse)(nil),                     // 10: protocol.ImageGenerationResponse
	(*ChatCompletionBody)(nil),                          // 11: protocol.ChatCompletionBody
	(*ChatContentPart)(nil),                             // 12: protocol.ChatContentPart
	(*ChatContentParts)(nil),                            // 13: protocol.ChatContentParts
	(*ChatCompletionMessage)(nil),                       // 14: protocol.ChatCompletionMessage
	(*ChatCompletionRequest)(nil),                       // 15: protocol.ChatCompletionRequest
	(*ChatCompletionResponseMessage)(nil),               // 16: protocol.ChatCompletionResponseMessage
	(*ChatCompletionResponse)(nil),                      // 17: protocol.ChatCompletionResponse
	(*HostInfoBody)(nil),                                // 18: protocol.HostInfoBody
	(*HostInfoRequest)(nil),                             // 19: protocol.HostInfoRequest
	(*HostInfoResponse)(nil),                            // 20: protocol.HostInfoResponse
	(*AIProjectBody)(nil),                               // 21: protocol.AIProjectBody
	(*AIModelOfProject)(nil),                            // 22: protocol.AIModelOfProject
	(*AIProjectOfNode)(nil),                             // 23: protocol.AIProjectOfNode
	(*AIProjectRequest)(nil),                            // 24: protocol.AIProjectRequest
	(*AIProjectResponse)(nil),                           // 25: protocol.AIProjectResponse
	(*ImageGenerationResponse_ImageResponseChoice)(nil), // 26: protocol.ImageGenerationResponse.ImageResponseChoice
	(*ChatContentPart_Text)(nil),                        // 27: protocol.ChatContentPart.Text
	(*ChatContentPart_Image)(nil),                       // 28: protocol.ChatContentPart.Image
	(*ChatContentPart_Audio)(nil),                       // 29: protocol.ChatContentPart.Audio
	(*ChatCompletionResponse_ChatResponseChoice)(nil),   // 30: protocol.ChatCompletionResponse.ChatResponseChoice
	(*ChatCompletionResponse_ChatResponseUsage)(nil),    // 31: protocol.ChatCompletionResponse.ChatResponseUsage
	(*HostInfoResponse_OSInfo)(nil),                     // 32: protocol.HostInfoResponse.OSInfo
	(*HostInfoResponse_CpuInfo)(nil),                    // 33: protocol.HostInfoResponse.CpuInfo
	(*HostInfoResponse_MemoryInfo)(nil),                 // 34: protocol.HostInfoResponse.MemoryInfo
	(*HostInfoResponse_DiskInfo)(nil),                   // 35: protocol.HostInfoResponse.DiskInfo
	(*HostInfoResponse_GpuInfo)(nil),                    // 36: protocol.HostInfoResponse.GpuInfo
}
var file_protocol_proto_depIdxs = []int32{
	2,  // 0: protocol.Message.header:type_name -> protocol.MessageHeader
	0,  // 1: protocol.Message.type:type_name -> protocol.MessageType
	5,  // 2: protocol.PeerIdentityBody.req:type_name -> protocol.PeerIdentityRequest
	6,  // 3: protocol.PeerIdentityBody.res:type_name -> protocol.PeerIdentityResponse
	9,  // 4: protocol.ImageGenerationBody.req:type_name -> protocol.ImageGenerationRequest
	10, // 5: protocol.ImageGenerationBody.res:type_name -> protocol.ImageGenerationResponse
	7,  // 6: protocol.ImageGenerationRequest.wallet:type_name -> protocol.WalletVerification
	26, // 7: protocol.ImageGenerationResponse.choices:type_name -> protocol.ImageGenerationResponse.ImageResponseChoice
	15, // 8: protocol.ChatCompletionBody.req:type_name -> protocol.ChatCompletionRequest
	17, // 9: protocol.ChatCompletionBody.res:type_name -> protocol.ChatCompletionResponse
	1,  // 10: protocol.ChatContentPart.type:type_name -> protocol.ChatContentPart.Type
	27, // 11: protocol.ChatContentPart.text:type_name -> protocol.ChatContentPart.Text
	28, // 12: protocol.ChatContentPart.image:type_name -> protocol.ChatContentPart.Image
	29, // 13: protocol.ChatContentPart.audio:type_name -> protocol.ChatContentPart.Audio
	12, // 14: protocol.ChatContentParts.parts:type_name -> protocol.ChatContentPart
	14, // 15: protocol.ChatCompletionRequest.messages:type_name -> protocol.ChatCompletionMessage
	7,  // 16: protocol.ChatCompletionRequest.wallet:type_name -> protocol.WalletVerification
	30, // 17: protocol.ChatCompletionResponse.choices:type_name -> protocol.ChatCompletionResponse.ChatResponseChoice
	31, // 18: protocol.ChatCompletionResponse.usage:type_name -> protocol.ChatCompletionResponse.ChatResponseUsage
	19, // 19: protocol.HostInfoBody.req:type_name -> protocol.HostInfoRequest
	20, // 20: protocol.HostInfoBody.res:type_name -> protocol.HostInfoResponse
	32, // 21: protocol.HostInfoResponse.os:type_name -> protocol.HostInfoResponse.OSInfo
	33, // 22: protocol.HostInfoResponse.cpu:type_name -> protocol.HostInfoResponse.CpuInfo
	34, // 23: protocol.HostInfoResponse.memory:type_name -> protocol.HostInfoResponse.MemoryInfo
	35, // 24: protocol.HostInfoResponse.disk:type_name -> protocol.HostInfoResponse.DiskInfo
	36, // 25: protocol.HostInfoResponse.gpu:type_name -> protocol.HostInfoResponse.GpuInfo
	24, // 26: protocol.AIProjectBody.req:type_name -> protocol.AIProjectRequest
	25, // 27: protocol.AIProjectBody.res:type_name -> protocol.AIProjectResponse
	22, // 28: protocol.AIProjectOfNode.models:type_name -> protocol.AIModelOfProject
	23, // 29: protocol.AIProjectResponse.projects:type_name -> protocol.AIProjectOfNode
	16, // 30: protocol.ChatCompletionResponse.ChatResponseChoice.message:type_name -> protocol.ChatCompletionResponseMessage
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_protocol_proto_init() }
func file_protocol_proto_init() {
	if File_protocol_proto != nil {
		return
	}
	file_protocol_proto_msgTypes[2].OneofWrappers = []any{
		(*PeerIdentityBody_Req)(nil),
		(*PeerIdentityBody_Res)(nil),
	}
	file_protocol_proto_msgTypes[6].OneofWrappers = []any{
		(*ImageGenerationBody_Req)(nil),
		(*ImageGenerationBody_Res)(nil),
	}
	file_protocol_proto_msgTypes[9].OneofWrappers = []any{
		(*ChatCompletionBody_Req)(nil),
		(*ChatCompletionBody_Res)(nil),
	}
	file_protocol_proto_msgTypes[16].OneofWrappers = []any{
		(*HostInfoBody_Req)(nil),
		(*HostInfoBody_Res)(nil),
	}
	file_protocol_proto_msgTypes[19].OneofWrappers = []any{
		(*AIProjectBody_Req)(nil),
		(*AIProjectBody_Res)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_proto_goTypes,
		DependencyIndexes: file_protocol_proto_depIdxs,
		EnumInfos:         file_protocol_proto_enumTypes,
		MessageInfos:      file_protocol_proto_msgTypes,
	}.Build()
	File_protocol_proto = out.File
	file_protocol_proto_rawDesc = nil
	file_protocol_proto_goTypes = nil
	file_protocol_proto_depIdxs = nil
}
